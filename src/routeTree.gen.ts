/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DefaultLayoutImport } from './routes/_defaultLayout'
import { Route as DashboardLayoutImport } from './routes/_dashboardLayout'
import { Route as AuthLayoutImport } from './routes/_authLayout'
import { Route as DefaultLayoutIndexImport } from './routes/_defaultLayout/index'
import { Route as DefaultLayoutAboutImport } from './routes/_defaultLayout/about'
import { Route as AuthLayoutSigninImport } from './routes/_authLayout/signin'
import { Route as DashboardLayoutDashboardRouteImport } from './routes/_dashboardLayout/dashboard/route'
import { Route as DefaultLayoutProjectsIndexImport } from './routes/_defaultLayout/projects.index'
import { Route as DashboardLayoutDashboardIndexImport } from './routes/_dashboardLayout/dashboard/index'
import { Route as DefaultLayoutProjectsProjectIdImport } from './routes/_defaultLayout/projects.$projectId'

// Create/Update Routes

const DefaultLayoutRoute = DefaultLayoutImport.update({
  id: '/_defaultLayout',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: '/_dashboardLayout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_authLayout',
  getParentRoute: () => rootRoute,
} as any)

const DefaultLayoutIndexRoute = DefaultLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DefaultLayoutRoute,
} as any)

const DefaultLayoutAboutRoute = DefaultLayoutAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => DefaultLayoutRoute,
} as any)

const AuthLayoutSigninRoute = AuthLayoutSigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const DashboardLayoutDashboardRouteRoute =
  DashboardLayoutDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DefaultLayoutProjectsIndexRoute = DefaultLayoutProjectsIndexImport.update(
  {
    id: '/projects/',
    path: '/projects/',
    getParentRoute: () => DefaultLayoutRoute,
  } as any,
)

const DashboardLayoutDashboardIndexRoute =
  DashboardLayoutDashboardIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardLayoutDashboardRouteRoute,
  } as any)

const DefaultLayoutProjectsProjectIdRoute =
  DefaultLayoutProjectsProjectIdImport.update({
    id: '/projects/$projectId',
    path: '/projects/$projectId',
    getParentRoute: () => DefaultLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authLayout': {
      id: '/_authLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_dashboardLayout': {
      id: '/_dashboardLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_defaultLayout': {
      id: '/_defaultLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DefaultLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_dashboardLayout/dashboard': {
      id: '/_dashboardLayout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutDashboardRouteImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/_authLayout/signin': {
      id: '/_authLayout/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthLayoutSigninImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_defaultLayout/about': {
      id: '/_defaultLayout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof DefaultLayoutAboutImport
      parentRoute: typeof DefaultLayoutImport
    }
    '/_defaultLayout/': {
      id: '/_defaultLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DefaultLayoutIndexImport
      parentRoute: typeof DefaultLayoutImport
    }
    '/_defaultLayout/projects/$projectId': {
      id: '/_defaultLayout/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof DefaultLayoutProjectsProjectIdImport
      parentRoute: typeof DefaultLayoutImport
    }
    '/_dashboardLayout/dashboard/': {
      id: '/_dashboardLayout/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardLayoutDashboardIndexImport
      parentRoute: typeof DashboardLayoutDashboardRouteImport
    }
    '/_defaultLayout/projects/': {
      id: '/_defaultLayout/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof DefaultLayoutProjectsIndexImport
      parentRoute: typeof DefaultLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthLayoutRouteChildren {
  AuthLayoutSigninRoute: typeof AuthLayoutSigninRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutSigninRoute: AuthLayoutSigninRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface DashboardLayoutDashboardRouteRouteChildren {
  DashboardLayoutDashboardIndexRoute: typeof DashboardLayoutDashboardIndexRoute
}

const DashboardLayoutDashboardRouteRouteChildren: DashboardLayoutDashboardRouteRouteChildren =
  {
    DashboardLayoutDashboardIndexRoute: DashboardLayoutDashboardIndexRoute,
  }

const DashboardLayoutDashboardRouteRouteWithChildren =
  DashboardLayoutDashboardRouteRoute._addFileChildren(
    DashboardLayoutDashboardRouteRouteChildren,
  )

interface DashboardLayoutRouteChildren {
  DashboardLayoutDashboardRouteRoute: typeof DashboardLayoutDashboardRouteRouteWithChildren
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
  DashboardLayoutDashboardRouteRoute:
    DashboardLayoutDashboardRouteRouteWithChildren,
}

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
  DashboardLayoutRouteChildren,
)

interface DefaultLayoutRouteChildren {
  DefaultLayoutAboutRoute: typeof DefaultLayoutAboutRoute
  DefaultLayoutIndexRoute: typeof DefaultLayoutIndexRoute
  DefaultLayoutProjectsProjectIdRoute: typeof DefaultLayoutProjectsProjectIdRoute
  DefaultLayoutProjectsIndexRoute: typeof DefaultLayoutProjectsIndexRoute
}

const DefaultLayoutRouteChildren: DefaultLayoutRouteChildren = {
  DefaultLayoutAboutRoute: DefaultLayoutAboutRoute,
  DefaultLayoutIndexRoute: DefaultLayoutIndexRoute,
  DefaultLayoutProjectsProjectIdRoute: DefaultLayoutProjectsProjectIdRoute,
  DefaultLayoutProjectsIndexRoute: DefaultLayoutProjectsIndexRoute,
}

const DefaultLayoutRouteWithChildren = DefaultLayoutRoute._addFileChildren(
  DefaultLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof DefaultLayoutRouteWithChildren
  '/dashboard': typeof DashboardLayoutDashboardRouteRouteWithChildren
  '/signin': typeof AuthLayoutSigninRoute
  '/about': typeof DefaultLayoutAboutRoute
  '/': typeof DefaultLayoutIndexRoute
  '/projects/$projectId': typeof DefaultLayoutProjectsProjectIdRoute
  '/dashboard/': typeof DashboardLayoutDashboardIndexRoute
  '/projects': typeof DefaultLayoutProjectsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof DashboardLayoutRouteWithChildren
  '/signin': typeof AuthLayoutSigninRoute
  '/about': typeof DefaultLayoutAboutRoute
  '/': typeof DefaultLayoutIndexRoute
  '/projects/$projectId': typeof DefaultLayoutProjectsProjectIdRoute
  '/dashboard': typeof DashboardLayoutDashboardIndexRoute
  '/projects': typeof DefaultLayoutProjectsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authLayout': typeof AuthLayoutRouteWithChildren
  '/_dashboardLayout': typeof DashboardLayoutRouteWithChildren
  '/_defaultLayout': typeof DefaultLayoutRouteWithChildren
  '/_dashboardLayout/dashboard': typeof DashboardLayoutDashboardRouteRouteWithChildren
  '/_authLayout/signin': typeof AuthLayoutSigninRoute
  '/_defaultLayout/about': typeof DefaultLayoutAboutRoute
  '/_defaultLayout/': typeof DefaultLayoutIndexRoute
  '/_defaultLayout/projects/$projectId': typeof DefaultLayoutProjectsProjectIdRoute
  '/_dashboardLayout/dashboard/': typeof DashboardLayoutDashboardIndexRoute
  '/_defaultLayout/projects/': typeof DefaultLayoutProjectsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dashboard'
    | '/signin'
    | '/about'
    | '/'
    | '/projects/$projectId'
    | '/dashboard/'
    | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/signin'
    | '/about'
    | '/'
    | '/projects/$projectId'
    | '/dashboard'
    | '/projects'
  id:
    | '__root__'
    | '/_authLayout'
    | '/_dashboardLayout'
    | '/_defaultLayout'
    | '/_dashboardLayout/dashboard'
    | '/_authLayout/signin'
    | '/_defaultLayout/about'
    | '/_defaultLayout/'
    | '/_defaultLayout/projects/$projectId'
    | '/_dashboardLayout/dashboard/'
    | '/_defaultLayout/projects/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren
  DefaultLayoutRoute: typeof DefaultLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
  DefaultLayoutRoute: DefaultLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authLayout",
        "/_dashboardLayout",
        "/_defaultLayout"
      ]
    },
    "/_authLayout": {
      "filePath": "_authLayout.tsx",
      "children": [
        "/_authLayout/signin"
      ]
    },
    "/_dashboardLayout": {
      "filePath": "_dashboardLayout.tsx",
      "children": [
        "/_dashboardLayout/dashboard"
      ]
    },
    "/_defaultLayout": {
      "filePath": "_defaultLayout.tsx",
      "children": [
        "/_defaultLayout/about",
        "/_defaultLayout/",
        "/_defaultLayout/projects/$projectId",
        "/_defaultLayout/projects/"
      ]
    },
    "/_dashboardLayout/dashboard": {
      "filePath": "_dashboardLayout/dashboard/route.tsx",
      "parent": "/_dashboardLayout",
      "children": [
        "/_dashboardLayout/dashboard/"
      ]
    },
    "/_authLayout/signin": {
      "filePath": "_authLayout/signin.tsx",
      "parent": "/_authLayout"
    },
    "/_defaultLayout/about": {
      "filePath": "_defaultLayout/about.tsx",
      "parent": "/_defaultLayout"
    },
    "/_defaultLayout/": {
      "filePath": "_defaultLayout/index.tsx",
      "parent": "/_defaultLayout"
    },
    "/_defaultLayout/projects/$projectId": {
      "filePath": "_defaultLayout/projects.$projectId.tsx",
      "parent": "/_defaultLayout"
    },
    "/_dashboardLayout/dashboard/": {
      "filePath": "_dashboardLayout/dashboard/index.tsx",
      "parent": "/_dashboardLayout/dashboard"
    },
    "/_defaultLayout/projects/": {
      "filePath": "_defaultLayout/projects.index.tsx",
      "parent": "/_defaultLayout"
    }
  }
}
ROUTE_MANIFEST_END */
